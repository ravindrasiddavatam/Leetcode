class MinStack {

    private Node head;

    private static class Node{
        int value;
        int min;
        Node next;

        Node(int value, int min, Node next){
            this.value = value;
            this.min = min;
            this.next = next;
        }
    }

    public MinStack() {

        head = null;
        
    }
    
    public void push(int val) {

        if(head == null){
            head = new Node(val, val, null);
        }else{
            head = new Node(val, Math.min(val, head.min),head);

        }
        
    }
    
    public void pop() {

        if(head!=null){
            head = head.next;
        }
        
    }
    
    public int top() {

        if(head!=null){
            return head.value;
        }else{
            throw new RuntimeException("stack is empty");
        }
        
    }
    
    public int getMin() {
        if(head!=null){
            return head.min;

        }else{
            throw new RuntimeException("stack is empty");
        }
        
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
